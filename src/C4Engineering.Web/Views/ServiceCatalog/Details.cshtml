@model C4Engineering.Web.Models.ServiceCatalog.ServiceModel
@{
    ViewData["Title"] = $"Service Details - {Model?.Name ?? "Not Found"}";
}

@if (Model == null)
{
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card border-danger">
                <div class="card-body text-center">
                    <i class="bi bi-exclamation-triangle display-1 text-danger mb-3"></i>
                    <h4 class="card-title text-danger">Service Not Found</h4>
                    <p class="card-text">The requested service could not be found or may have been removed.</p>
                    <a href="@Url.Action("Index", "ServiceCatalog")" class="btn btn-primary">
                        <i class="bi bi-arrow-left"></i> Back to Service Catalog
                    </a>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <!-- Header with navigation -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb mb-2">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "ServiceCatalog")">Service Catalog</a></li>
                    <li class="breadcrumb-item active" aria-current="page">@Model.Name</li>
                </ol>
            </nav>
            <h1 class="h2 mb-0">@Model.Name</h1>
        </div>
        <div>
            <div class="btn-group" role="group">
                <a href="@Url.Action("Index", "ServiceCatalog")" class="btn btn-outline-secondary">
                    <i class="bi bi-arrow-left"></i> Back
                </a>
                @if (!string.IsNullOrEmpty(Model.Repository))
                {
                    <a href="@Model.Repository" class="btn btn-outline-primary" target="_blank" rel="noopener noreferrer">
                        <i class="bi bi-github"></i> Repository
                    </a>
                }
                @if (!string.IsNullOrEmpty(Model.Documentation))
                {
                    <a href="@Model.Documentation" class="btn btn-outline-info" target="_blank" rel="noopener noreferrer">
                        <i class="bi bi-book"></i> Documentation
                    </a>
                }
                @if (!string.IsNullOrEmpty(Model.ApiSpec))
                {
                    <a href="@Model.ApiSpec" class="btn btn-outline-success" target="_blank" rel="noopener noreferrer">
                        <i class="bi bi-code"></i> API Spec
                    </a>
                }
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Main Content -->
        <div class="col-lg-8">
            <!-- Service Overview -->
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-info-circle"></i> Service Overview
                    </h5>
                </div>
                <div class="card-body">
                    @if (!string.IsNullOrEmpty(Model.Description))
                    {
                        <p class="card-text">@Model.Description</p>
                    }
                    else
                    {
                        <p class="card-text text-muted">No description available.</p>
                    }

                    <div class="row">
                        <div class="col-md-6">
                            <dl class="row">
                                <dt class="col-sm-4">Type:</dt>
                                <dd class="col-sm-8">
                                    <span class="badge bg-primary">@Model.Type</span>
                                </dd>
                                <dt class="col-sm-4">Owner:</dt>
                                <dd class="col-sm-8">@Model.Owner</dd>
                                <dt class="col-sm-4">Lifecycle:</dt>
                                <dd class="col-sm-8">
                                    <span class="badge @(Model.Lifecycle switch {
                                        C4Engineering.Web.Models.ServiceCatalog.ServiceLifecycle.Experimental => "bg-warning",
                                        C4Engineering.Web.Models.ServiceCatalog.ServiceLifecycle.Development => "bg-info",
                                        C4Engineering.Web.Models.ServiceCatalog.ServiceLifecycle.Production => "bg-success",
                                        C4Engineering.Web.Models.ServiceCatalog.ServiceLifecycle.Deprecated => "bg-danger",
                                        _ => "bg-secondary"
                                    })">@Model.Lifecycle</span>
                                </dd>
                            </dl>
                        </div>
                        <div class="col-md-6">
                            <dl class="row">
                                @if (!string.IsNullOrEmpty(Model.System))
                                {
                                    <dt class="col-sm-4">System:</dt>
                                    <dd class="col-sm-8">@Model.System</dd>
                                }
                                @if (!string.IsNullOrEmpty(Model.Metadata.Version))
                                {
                                    <dt class="col-sm-4">Version:</dt>
                                    <dd class="col-sm-8">@Model.Metadata.Version</dd>
                                }
                                <dt class="col-sm-4">Updated:</dt>
                                <dd class="col-sm-8">
                                    <time datetime="@Model.Metadata.UpdatedAt.ToString("yyyy-MM-ddTHH:mm:ssZ")" title="@Model.Metadata.UpdatedAt.ToString("F")">
                                        @Model.Metadata.UpdatedAt.ToString("MMM dd, yyyy")
                                    </time>
                                </dd>
                            </dl>
                        </div>
                    </div>

                    @if (Model.Tags.Any())
                    {
                        <div class="mt-3">
                            <strong class="me-2">Tags:</strong>
                            @foreach (var tag in Model.Tags)
                            {
                                <span class="badge bg-secondary me-1">@tag</span>
                            }
                        </div>
                    }
                </div>
            </div>

            <!-- Dependencies -->
            @if (Model.DependsOn.Any() || Model.ProvidesApis.Any() || Model.ConsumesApis.Any())
            {
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-diagram-3"></i> Dependencies & APIs
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            @if (Model.DependsOn.Any())
                            {
                                <div class="col-md-4 mb-3">
                                    <h6 class="text-muted">Dependencies</h6>
                                    <ul class="list-unstyled">
                                        @foreach (var dependency in Model.DependsOn)
                                        {
                                            <li>
                                                <a href="@Url.Action("Details", "ServiceCatalog", new { id = dependency })" class="text-decoration-none">
                                                    <i class="bi bi-arrow-right-circle me-1"></i>@dependency
                                                </a>
                                            </li>
                                        }
                                    </ul>
                                </div>
                            }

                            @if (Model.ProvidesApis.Any())
                            {
                                <div class="col-md-4 mb-3">
                                    <h6 class="text-muted">Provides APIs</h6>
                                    <ul class="list-unstyled">
                                        @foreach (var api in Model.ProvidesApis)
                                        {
                                            <li>
                                                <i class="bi bi-cloud-upload me-1 text-success"></i>@api
                                            </li>
                                        }
                                    </ul>
                                </div>
                            }

                            @if (Model.ConsumesApis.Any())
                            {
                                <div class="col-md-4 mb-3">
                                    <h6 class="text-muted">Consumes APIs</h6>
                                    <ul class="list-unstyled">
                                        @foreach (var api in Model.ConsumesApis)
                                        {
                                            <li>
                                                <i class="bi bi-cloud-download me-1 text-primary"></i>@api
                                            </li>
                                        }
                                    </ul>
                                </div>
                            }
                        </div>

                        @if (!Model.DependsOn.Any() && !Model.ProvidesApis.Any() && !Model.ConsumesApis.Any())
                        {
                            <p class="text-muted mb-0">No dependencies or API relationships defined.</p>
                        }
                    </div>
                </div>
            }

            <!-- Health Check -->
            @if (!string.IsNullOrEmpty(Model.Metadata.HealthCheckUrl))
            {
                <div class="card mb-4">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-heart-pulse"></i> Health Status
                        </h5>
                        <button type="button" class="btn btn-sm btn-outline-primary" id="refreshHealthCheck">
                            <i class="bi bi-arrow-clockwise"></i> Refresh
                        </button>
                    </div>
                    <div class="card-body">
                        <div id="healthStatus" data-health-url="@Model.Metadata.HealthCheckUrl">
                            <div class="d-flex align-items-center">
                                <div class="spinner-border spinner-border-sm me-2" role="status">
                                    <span class="visually-hidden">Loading...</span>
                                </div>
                                Checking health status...
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Sidebar -->
        <div class="col-lg-4">
            <!-- Quick Actions -->
            <div class="card mb-4">
                <div class="card-header">
                    <h6 class="card-title mb-0">Quick Actions</h6>
                </div>
                <div class="card-body">
                    <div class="d-grid gap-2">
                        <button type="button" class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#editServiceModal">
                            <i class="bi bi-pencil"></i> Edit Service
                        </button>
                        @if (!string.IsNullOrEmpty(Model.Metadata.HealthCheckUrl))
                        {
                            <a href="@Model.Metadata.HealthCheckUrl" class="btn btn-outline-success" target="_blank" rel="noopener noreferrer">
                                <i class="bi bi-heart-pulse"></i> Health Check
                            </a>
                        }
                        <button type="button" class="btn btn-outline-info" onclick="viewDependencyGraph('@Model.Id')">
                            <i class="bi bi-diagram-3"></i> View in Graph
                        </button>
                        <div class="dropdown">
                            <button class="btn btn-outline-secondary dropdown-toggle w-100" type="button" data-bs-toggle="dropdown">
                                <i class="bi bi-three-dots"></i> More Actions
                            </button>
                            <ul class="dropdown-menu w-100">
                                <li><a class="dropdown-item" href="#" onclick="exportServiceInfo('@Model.Id')">
                                    <i class="bi bi-download"></i> Export Info
                                </a></li>
                                <li><a class="dropdown-item" href="#" onclick="shareService('@Model.Id')">
                                    <i class="bi bi-share"></i> Share
                                </a></li>
                                <li><hr class="dropdown-divider"></li>
                                <li><a class="dropdown-item text-danger" href="#" onclick="deleteService('@Model.Id')">
                                    <i class="bi bi-trash"></i> Delete
                                </a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Service Metadata -->
            <div class="card mb-4">
                <div class="card-header">
                    <h6 class="card-title mb-0">Metadata</h6>
                </div>
                <div class="card-body">
                    <dl class="row small">
                        <dt class="col-6">ID:</dt>
                        <dd class="col-6"><code>@Model.Id</code></dd>
                        <dt class="col-6">Created:</dt>
                        <dd class="col-6">
                            <time datetime="@Model.Metadata.CreatedAt.ToString("yyyy-MM-ddTHH:mm:ssZ")" title="@Model.Metadata.CreatedAt.ToString("F")">
                                @Model.Metadata.CreatedAt.ToString("MMM dd, yyyy")
                            </time>
                        </dd>
                        <dt class="col-6">Updated:</dt>
                        <dd class="col-6">
                            <time datetime="@Model.Metadata.UpdatedAt.ToString("yyyy-MM-ddTHH:mm:ssZ")" title="@Model.Metadata.UpdatedAt.ToString("F")">
                                @Model.Metadata.UpdatedAt.ToString("MMM dd, yyyy")
                            </time>
                        </dd>
                    </dl>
                </div>
            </div>

            <!-- Related Diagrams -->
            <div class="card">
                <div class="card-header">
                    <h6 class="card-title mb-0">Related Diagrams</h6>
                </div>
                <div class="card-body">
                    <div id="relatedDiagrams">
                        <div class="text-center">
                            <div class="spinner-border spinner-border-sm" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                            <div class="mt-2 small text-muted">Loading related diagrams...</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<!-- Edit Service Modal -->
<div class="modal fade" id="editServiceModal" tabindex="-1" aria-labelledby="editServiceModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editServiceModalLabel">Edit Service</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="editServiceForm">
                <div class="modal-body">
                    <!-- Form fields will be populated by JavaScript -->
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Toast Container -->
<div class="toast-container position-fixed bottom-0 end-0 p-3">
    <div id="successToast" class="toast align-items-center text-white bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="d-flex">
            <div class="toast-body">
                Operation completed successfully!
            </div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
    </div>
    <div id="errorToast" class="toast align-items-center text-white bg-danger border-0" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="d-flex">
            <div class="toast-body">
                <span id="errorMessage">An error occurred.</span>
            </div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
    </div>
</div>

@section Scripts {
    <script type="module" src="~/js/service-details.js"></script>
}

@section Styles {
    <style>
        .health-status-healthy {
            color: #198754;
        }
        
        .health-status-unhealthy {
            color: #dc3545;
        }
        
        .health-status-unknown {
            color: #6c757d;
        }
        
        .dependency-link:hover {
            text-decoration: underline !important;
        }
        
        dl.row dt {
            font-weight: 600;
        }
        
        .card-title i {
            color: var(--bs-primary);
        }
        
        .badge {
            font-size: 0.75em;
        }
        
        time {
            cursor: help;
        }
    </style>
}