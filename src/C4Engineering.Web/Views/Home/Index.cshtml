@{
    ViewData["Title"] = "Dashboard";
    ViewData["Breadcrumb"] = "<li class=\"breadcrumb-item active\">Dashboard</li>";
}

<!-- Page Header -->
<div class="page-header mb-4">
    <div class="d-flex justify-content-between align-items-center">
        <div>
            <h1 class="h2 mb-1">Platform Dashboard</h1>
            <p class="text-muted mb-0">Welcome to C4Engineering Platform - Your platform engineering command center</p>
        </div>
        <div class="header-actions">
            <button class="btn btn-outline-primary btn-sm me-2" onclick="window.open('/api-docs', '_blank')">
                <i class="bi bi-code-slash me-1"></i>
                API Docs
            </button>
            <button class="btn btn-primary btn-sm" onclick="initializeSampleData()">
                <i class="bi bi-plus-circle me-1"></i>
                Quick Setup
            </button>
        </div>
    </div>
</div>

<!-- Key Metrics Cards -->
<div class="row mb-4">
    <div class="col-xl-3 col-md-6 mb-3">
        <div class="card h-100 metric-card">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="metric-icon bg-primary bg-opacity-10 text-primary rounded-circle me-3">
                        <i class="bi bi-collection"></i>
                    </div>
                    <div>
                        <div class="metric-value">5</div>
                        <div class="metric-label">Services</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="col-xl-3 col-md-6 mb-3">
        <div class="card h-100 metric-card">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="metric-icon bg-success bg-opacity-10 text-success rounded-circle me-3">
                        <i class="bi bi-arrow-repeat"></i>
                    </div>
                    <div>
                        <div class="metric-value">12</div>
                        <div class="metric-label">Pipelines</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="col-xl-3 col-md-6 mb-3">
        <div class="card h-100 metric-card">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="metric-icon bg-info bg-opacity-10 text-info rounded-circle me-3">
                        <i class="bi bi-cloud-upload"></i>
                    </div>
                    <div>
                        <div class="metric-value">8</div>
                        <div class="metric-label">Deployments</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="col-xl-3 col-md-6 mb-3">
        <div class="card h-100 metric-card">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="metric-icon bg-warning bg-opacity-10 text-warning rounded-circle me-3">
                        <i class="bi bi-exclamation-triangle"></i>
                    </div>
                    <div>
                        <div class="metric-value">2</div>
                        <div class="metric-label">Issues</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Main Content Grid -->
<div class="row">
    <!-- Quick Actions -->
    <div class="col-lg-8 mb-4">
        <div class="card h-100">
            <div class="card-header">
                <h5 class="card-title mb-0">
                    <i class="bi bi-lightning-charge me-2"></i>
                    Quick Actions
                </h5>
            </div>
            <div class="card-body">
                <div class="row g-3">
                    <div class="col-md-6">
                        <div class="quick-action-card" onclick="window.location.href='/ServiceCatalog'">
                            <div class="quick-action-icon">
                                <i class="bi bi-plus-circle"></i>
                            </div>
                            <div class="quick-action-content">
                                <h6 class="quick-action-title">Add New Service</h6>
                                <p class="quick-action-desc">Register a new service in the catalog</p>
                            </div>
                            <div class="quick-action-arrow">
                                <i class="bi bi-arrow-right"></i>
                            </div>
                        </div>
                    </div>
                    
                    <div class="col-md-6">
                        <div class="quick-action-card" onclick="window.location.href='/Architecture'">
                            <div class="quick-action-icon">
                                <i class="bi bi-diagram-3"></i>
                            </div>
                            <div class="quick-action-content">
                                <h6 class="quick-action-title">View Architecture</h6>
                                <p class="quick-action-desc">Explore C4 model diagrams</p>
                            </div>
                            <div class="quick-action-arrow">
                                <i class="bi bi-arrow-right"></i>
                            </div>
                        </div>
                    </div>
                    
                    <div class="col-md-6">
                        <div class="quick-action-card" onclick="window.location.href='/Pipeline'">
                            <div class="quick-action-icon">
                                <i class="bi bi-gear"></i>
                            </div>
                            <div class="quick-action-content">
                                <h6 class="quick-action-title">Configure Pipeline</h6>
                                <p class="quick-action-desc">Set up CI/CD pipelines</p>
                            </div>
                            <div class="quick-action-arrow">
                                <i class="bi bi-arrow-right"></i>
                            </div>
                        </div>
                    </div>
                    
                    <div class="col-md-6">
                        <div class="quick-action-card" onclick="checkDockerStatus()">
                            <div class="quick-action-icon">
                                <i class="bi bi-hdd-stack"></i>
                            </div>
                            <div class="quick-action-content">
                                <h6 class="quick-action-title">Check Docker Status</h6>
                                <p class="quick-action-desc">Verify Docker Desktop connection</p>
                            </div>
                            <div class="quick-action-arrow">
                                <i class="bi bi-arrow-right"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Recent Activity -->
    <div class="col-lg-4 mb-4">
        <div class="card h-100">
            <div class="card-header">
                <h5 class="card-title mb-0">
                    <i class="bi bi-clock-history me-2"></i>
                    Recent Activity
                </h5>
            </div>
            <div class="card-body">
                <div class="activity-timeline">
                    <div class="activity-item">
                        <div class="activity-icon bg-success">
                            <i class="bi bi-check-circle"></i>
                        </div>
                        <div class="activity-content">
                            <div class="activity-title">User Service deployed</div>
                            <div class="activity-time">2 hours ago</div>
                        </div>
                    </div>
                    
                    <div class="activity-item">
                        <div class="activity-icon bg-primary">
                            <i class="bi bi-plus-circle"></i>
                        </div>
                        <div class="activity-content">
                            <div class="activity-title">Payment Service added</div>
                            <div class="activity-time">4 hours ago</div>
                        </div>
                    </div>
                    
                    <div class="activity-item">
                        <div class="activity-icon bg-info">
                            <i class="bi bi-arrow-repeat"></i>
                        </div>
                        <div class="activity-content">
                            <div class="activity-title">Pipeline updated</div>
                            <div class="activity-time">1 day ago</div>
                        </div>
                    </div>
                    
                    <div class="activity-item">
                        <div class="activity-icon bg-warning">
                            <i class="bi bi-exclamation-triangle"></i>
                        </div>
                        <div class="activity-content">
                            <div class="activity-title">Health check failed</div>
                            <div class="activity-time">2 days ago</div>
                        </div>
                    </div>
                </div>
                
                <div class="mt-3">
                    <a href="#" class="btn btn-outline-primary btn-sm w-100">
                        View All Activity
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Service Overview -->
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <div class="d-flex justify-content-between align-items-center">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-collection me-2"></i>
                        Service Overview
                    </h5>
                    <a href="@Url.Action("Index", "ServiceCatalog")" class="btn btn-outline-primary btn-sm">
                        <i class="bi bi-arrow-right me-1"></i>
                        View All Services
                    </a>
                </div>
            </div>
            <div class="card-body">
                <div class="row g-3">
                    <div class="col-md-6 col-lg-4">
                        <div class="service-summary-card">
                            <div class="service-icon">
                                <i class="bi bi-box-seam"></i>
                            </div>
                            <div class="service-info">
                                <h6 class="service-name">User Service</h6>
                                <div class="service-status">
                                    <span class="badge bg-success">Production</span>
                                    <span class="service-owner">Backend Team</span>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="col-md-6 col-lg-4">
                        <div class="service-summary-card">
                            <div class="service-icon">
                                <i class="bi bi-box-seam"></i>
                            </div>
                            <div class="service-info">
                                <h6 class="service-name">Payment Service</h6>
                                <div class="service-status">
                                    <span class="badge bg-success">Production</span>
                                    <span class="service-owner">Payments Team</span>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="col-md-6 col-lg-4">
                        <div class="service-summary-card">
                            <div class="service-icon">
                                <i class="bi bi-browser-chrome"></i>
                            </div>
                            <div class="service-info">
                                <h6 class="service-name">Frontend App</h6>
                                <div class="service-status">
                                    <span class="badge bg-success">Production</span>
                                    <span class="service-owner">Frontend Team</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        /* Dashboard-specific styles */
        .page-header {
            margin-bottom: 2rem;
        }
        
        .metric-card .metric-icon {
            width: 48px;
            height: 48px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
        }
        
        .metric-value {
            font-size: 1.75rem;
            font-weight: 700;
            color: #323130;
            line-height: 1;
        }
        
        .metric-label {
            font-size: 0.875rem;
            color: #605e5c;
            margin-top: 4px;
        }
        
        .quick-action-card {
            display: flex;
            align-items: center;
            padding: 16px;
            border: 1px solid #edebe9;
            border-radius: 8px;
            cursor: pointer;
            transition: all 0.2s ease;
            text-decoration: none;
            color: inherit;
        }
        
        .quick-action-card:hover {
            background-color: #f3f2f1;
            border-color: #d2d0ce;
            transform: translateY(-1px);
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }
        
        .quick-action-icon {
            width: 40px;
            height: 40px;
            background-color: #deecf9;
            color: #0078d4;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 8px;
            font-size: 1.25rem;
            margin-right: 12px;
        }
        
        .quick-action-content {
            flex: 1;
        }
        
        .quick-action-title {
            font-size: 0.95rem;
            font-weight: 600;
            margin-bottom: 2px;
            color: #323130;
        }
        
        .quick-action-desc {
            font-size: 0.8rem;
            color: #605e5c;
            margin: 0;
        }
        
        .quick-action-arrow {
            color: #605e5c;
            font-size: 0.875rem;
        }
        
        .activity-timeline {
            position: relative;
        }
        
        .activity-item {
            display: flex;
            align-items: flex-start;
            margin-bottom: 16px;
            position: relative;
        }
        
        .activity-item:not(:last-child)::before {
            content: '';
            position: absolute;
            left: 14px;
            top: 28px;
            bottom: -16px;
            width: 1px;
            background-color: #edebe9;
        }
        
        .activity-icon {
            width: 28px;
            height: 28px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 0.75rem;
            color: white;
            margin-right: 12px;
            z-index: 1;
            position: relative;
        }
        
        .activity-content {
            flex: 1;
        }
        
        .activity-title {
            font-size: 0.875rem;
            font-weight: 500;
            color: #323130;
            margin-bottom: 2px;
        }
        
        .activity-time {
            font-size: 0.75rem;
            color: #605e5c;
        }
        
        .service-summary-card {
            display: flex;
            align-items: center;
            padding: 12px;
            border: 1px solid #edebe9;
            border-radius: 6px;
            background-color: #faf9f8;
        }
        
        .service-icon {
            width: 36px;
            height: 36px;
            background-color: #deecf9;
            color: #0078d4;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 6px;
            font-size: 1.125rem;
            margin-right: 12px;
        }
        
        .service-name {
            font-size: 0.9rem;
            font-weight: 600;
            margin-bottom: 4px;
            color: #323130;
        }
        
        .service-status {
            display: flex;
            align-items: center;
            gap: 8px;
        }
        
        .service-owner {
            font-size: 0.75rem;
            color: #605e5c;
        }
    </style>
}

@section Scripts {
    <script>
        // Define functions in global scope
        window.initializeSampleData = async function() {
            try {
                // Show loading state
                const button = event.target;
                const originalText = button.innerHTML;
                button.innerHTML = '<span class="spinner-border spinner-border-sm me-2"></span>Initializing...';
                button.disabled = true;
                
                // TODO: Replace with actual API call when sample data endpoint is ready
                await new Promise(resolve => setTimeout(resolve, 2000)); // Simulate API call
                
                // Show success toast
                showToast('Sample data initialized successfully!', 'success');
            } catch (error) {
                console.error('Failed to initialize sample data:', error);
                showToast('Failed to initialize sample data', 'error');
            } finally {
                // Restore button state
                const button = event.target;
                const originalText = '<i class="bi bi-plus-circle me-1"></i>Quick Setup';
                button.innerHTML = originalText;
                button.disabled = false;
            }
        };
        
        window.checkDockerStatus = async function() {
            try {
                const button = event.target.closest('.quick-action-card');
                const originalContent = button.innerHTML;
                
                // Show loading state
                button.innerHTML = `
                    <div class="quick-action-icon">
                        <div class="spinner-border spinner-border-sm text-primary"></div>
                    </div>
                    <div class="quick-action-content">
                        <h6 class="quick-action-title">Checking Docker...</h6>
                        <p class="quick-action-desc">Verifying connection status</p>
                    </div>
                `;
                
                // Check if Docker is running by making an API call
                const response = await fetch('/api/deployment/docker/status');
                
                if (response.ok) {
                    const status = await response.json();
                    showToast(`Docker is ${status.isRunning ? 'running' : 'not running'}`, 'success');
                } else {
                    showToast('Unable to check Docker status', 'error');
                }
            } catch (error) {
                console.error('Failed to check Docker status:', error);
                showToast('Failed to check Docker status - Docker may not be running', 'error');
            } finally {
                setTimeout(() => {
                    // Restore original content
                    const button = event.target.closest('.quick-action-card');
                    button.innerHTML = `
                        <div class="quick-action-icon">
                            <i class="bi bi-hdd-stack"></i>
                        </div>
                        <div class="quick-action-content">
                            <h6 class="quick-action-title">Check Docker Status</h6>
                            <p class="quick-action-desc">Verify Docker Desktop connection</p>
                        </div>
                        <div class="quick-action-arrow">
                            <i class="bi bi-arrow-right"></i>
                        </div>
                    `;
                }, 1000);
            }
        };
        
        // Simple toast function for non-module scripts
        window.showToast = function(message, type = 'success') {
            // Create toast element if it doesn't exist
            let toastContainer = document.querySelector('.toast-container');
            if (!toastContainer) {
                toastContainer = document.createElement('div');
                toastContainer.className = 'toast-container position-fixed bottom-0 end-0 p-3';
                document.body.appendChild(toastContainer);
            }
            
            const toastId = 'toast-' + Date.now();
            const bgClass = type === 'success' ? 'bg-success' : 'bg-danger';
            
            const toastHtml = `
                <div id="${toastId}" class="toast align-items-center text-white ${bgClass} border-0" role="alert" aria-live="assertive" aria-atomic="true">
                    <div class="d-flex">
                        <div class="toast-body">${message}</div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                </div>
            `;
            
            toastContainer.insertAdjacentHTML('beforeend', toastHtml);
            
            const toastElement = document.getElementById(toastId);
            if (typeof bootstrap !== 'undefined') {
                const toast = new bootstrap.Toast(toastElement);
                toast.show();
                
                // Remove toast element after it's hidden
                toastElement.addEventListener('hidden.bs.toast', () => {
                    toastElement.remove();
                });
            } else {
                console.error('Bootstrap is not loaded');
                // Fallback: show alert
                alert(message);
            }
        };

        // Ensure functions are available when DOM is ready
        document.addEventListener('DOMContentLoaded', function() {
            console.log('Dashboard functions loaded successfully');
            
            // Test that functions are available
            if (typeof window.initializeSampleData === 'function' && typeof window.checkDockerStatus === 'function') {
                console.log('✓ All dashboard functions are available');
                
                // Show a small indicator that JS is working
                const indicator = document.createElement('div');
                indicator.style.cssText = 'position: fixed; top: 70px; right: 10px; background: #107c10; color: white; padding: 5px 10px; border-radius: 4px; font-size: 12px; z-index: 9999; opacity: 0.8;';
                indicator.textContent = '✓ Dashboard Ready';
                document.body.appendChild(indicator);
                
                // Remove indicator after 3 seconds
                setTimeout(() => {
                    indicator.style.opacity = '0';
                    setTimeout(() => indicator.remove(), 300);
                }, 3000);
                
            } else {
                console.error('✗ Dashboard functions not properly defined');
                
                // Show error indicator
                const errorIndicator = document.createElement('div');
                errorIndicator.style.cssText = 'position: fixed; top: 70px; right: 10px; background: #d13438; color: white; padding: 5px 10px; border-radius: 4px; font-size: 12px; z-index: 9999;';
                errorIndicator.textContent = '✗ JS Error';
                document.body.appendChild(errorIndicator);
            }
            
            // Also check Bootstrap
            if (typeof bootstrap !== 'undefined') {
                console.log('✓ Bootstrap JavaScript is available');
            } else {
                console.error('✗ Bootstrap JavaScript not available');
            }
        });
    </script>
}