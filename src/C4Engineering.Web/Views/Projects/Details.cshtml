@model C4Engineering.Web.Models.Project.ProjectModel
@{
    ViewData["Title"] = $"Project Details - {Model?.Name ?? "Not Found"}";
}

@if (Model == null)
{
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card border-danger">
                <div class="card-body text-center">
                    <i class="bi bi-exclamation-triangle display-1 text-danger mb-3"></i>
                    <h4 class="card-title text-danger">Project Not Found</h4>
                    <p class="card-text">The requested project could not be found or may have been removed.</p>
                    <a href="@Url.Action("Index", "Projects")" class="btn btn-primary">
                        <i class="bi bi-arrow-left"></i> Back to Projects
                    </a>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <!-- Header with navigation -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb mb-2">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Projects")">Projects</a></li>
                    <li class="breadcrumb-item active" aria-current="page">@Model.Name</li>
                </ol>
            </nav>
            <h1 class="h2 mb-0">@Model.Name</h1>
        </div>
        <div>
            <div class="btn-group" role="group">
                <a href="@Url.Action("Index", "Projects")" class="btn btn-outline-secondary">
                    <i class="bi bi-arrow-left"></i> Back
                </a>
                @if (!string.IsNullOrEmpty(Model.Settings.Repository))
                {
                    <a href="@Model.Settings.Repository" class="btn btn-outline-primary" target="_blank" rel="noopener noreferrer">
                        <i class="bi bi-github"></i> Repository
                    </a>
                }
                @if (!string.IsNullOrEmpty(Model.Settings.Documentation))
                {
                    <a href="@Model.Settings.Documentation" class="btn btn-outline-info" target="_blank" rel="noopener noreferrer">
                        <i class="bi bi-book"></i> Documentation
                    </a>
                }
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Main Content -->
        <div class="col-lg-8">
            <!-- Project Overview -->
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-info-circle"></i> Project Overview
                    </h5>
                </div>
                <div class="card-body">
                    @if (!string.IsNullOrEmpty(Model.Description))
                    {
                        <p class="card-text">@Model.Description</p>
                    }
                    else
                    {
                        <p class="card-text text-muted">No description available.</p>
                    }

                    <div class="row">
                        <div class="col-md-6">
                            <dl class="row">
                                <dt class="col-sm-4">Type:</dt>
                                <dd class="col-sm-8">
                                    <span class="badge bg-primary">@Model.Type</span>
                                </dd>
                                <dt class="col-sm-4">Owner:</dt>
                                <dd class="col-sm-8">@Model.Owner</dd>
                                <dt class="col-sm-4">Status:</dt>
                                <dd class="col-sm-8">
                                    <span class="badge @(Model.Status switch {
                                        C4Engineering.Web.Models.Project.ProjectStatus.Planning => "bg-warning",
                                        C4Engineering.Web.Models.Project.ProjectStatus.Active => "bg-success",
                                        C4Engineering.Web.Models.Project.ProjectStatus.Development => "bg-info",
                                        C4Engineering.Web.Models.Project.ProjectStatus.Production => "bg-success",
                                        C4Engineering.Web.Models.Project.ProjectStatus.Maintenance => "bg-secondary",
                                        C4Engineering.Web.Models.Project.ProjectStatus.Deprecated => "bg-danger",
                                        C4Engineering.Web.Models.Project.ProjectStatus.Archived => "bg-dark",
                                        _ => "bg-secondary"
                                    })">@Model.Status</span>
                                </dd>
                            </dl>
                        </div>
                        <div class="col-md-6">
                            <dl class="row">
                                @if (!string.IsNullOrEmpty(Model.Metadata.Version))
                                {
                                    <dt class="col-sm-4">Version:</dt>
                                    <dd class="col-sm-8">@Model.Metadata.Version</dd>
                                }
                                @if (!string.IsNullOrEmpty(Model.Metadata.Template))
                                {
                                    <dt class="col-sm-4">Template:</dt>
                                    <dd class="col-sm-8">@Model.Metadata.Template</dd>
                                }
                                <dt class="col-sm-4">Updated:</dt>
                                <dd class="col-sm-8">
                                    <time datetime="@Model.Metadata.UpdatedAt.ToString("yyyy-MM-ddTHH:mm:ssZ")" title="@Model.Metadata.UpdatedAt.ToString("F")">
                                        @Model.Metadata.UpdatedAt.ToString("MMM dd, yyyy")
                                    </time>
                                </dd>
                            </dl>
                        </div>
                    </div>

                    @if (Model.Tags.Any())
                    {
                        <div class="mt-3">
                            <strong class="me-2">Tags:</strong>
                            @foreach (var tag in Model.Tags)
                            {
                                <span class="badge bg-secondary me-1">@tag</span>
                            }
                        </div>
                    }
                </div>
            </div>

            <!-- Project Components -->
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-boxes"></i> Project Components
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <!-- Services -->
                        <div class="col-md-4 mb-3">
                            <h6 class="text-muted">Services (@Model.Services.Count)</h6>
                            @if (Model.Services.Any())
                            {
                                <ul class="list-unstyled">
                                    @foreach (var service in Model.Services)
                                    {
                                        <li>
                                            <a href="@Url.Action("Details", "ServiceCatalog", new { id = service })" class="text-decoration-none">
                                                <i class="bi bi-gear me-1"></i>@service
                                            </a>
                                        </li>
                                    }
                                </ul>
                            }
                            else
                            {
                                <p class="text-muted small mb-0">No services assigned</p>
                            }
                        </div>

                        <!-- Diagrams -->
                        <div class="col-md-4 mb-3">
                            <h6 class="text-muted">Diagrams (@Model.Diagrams.Count)</h6>
                            @if (Model.Diagrams.Any())
                            {
                                <ul class="list-unstyled">
                                    @foreach (var diagram in Model.Diagrams)
                                    {
                                        <li>
                                            <a href="@Url.Action("Details", "Architecture", new { id = diagram })" class="text-decoration-none">
                                                <i class="bi bi-diagram-3 me-1"></i>@diagram
                                            </a>
                                        </li>
                                    }
                                </ul>
                            }
                            else
                            {
                                <p class="text-muted small mb-0">No diagrams assigned</p>
                            }
                        </div>

                        <!-- Pipelines -->
                        <div class="col-md-4 mb-3">
                            <h6 class="text-muted">Pipelines (@Model.Pipelines.Count)</h6>
                            @if (Model.Pipelines.Any())
                            {
                                <ul class="list-unstyled">
                                    @foreach (var pipeline in Model.Pipelines)
                                    {
                                        <li>
                                            <a href="@Url.Action("Details", "Pipeline", new { id = pipeline })" class="text-decoration-none">
                                                <i class="bi bi-arrow-repeat me-1"></i>@pipeline
                                            </a>
                                        </li>
                                    }
                                </ul>
                            }
                            else
                            {
                                <p class="text-muted small mb-0">No pipelines configured</p>
                            }
                        </div>
                    </div>
                </div>
            </div>

            <!-- Team Members -->
            @if (Model.TeamMembers.Any())
            {
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-people"></i> Team Members (@Model.TeamMembers.Count)
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            @foreach (var member in Model.TeamMembers)
                            {
                                <div class="col-md-6 mb-3">
                                    <div class="d-flex align-items-center">
                                        <div class="avatar-placeholder me-3">
                                            <i class="bi bi-person-circle h4 text-muted"></i>
                                        </div>
                                        <div>
                                            <div class="fw-medium">@member.Name</div>
                                            <div class="small text-muted">@member.Email</div>
                                            <div class="small">
                                                <span class="badge bg-light text-dark">@member.Role</span>
                                                <span class="text-muted ms-2">Joined @member.JoinedAt.ToString("MMM yyyy")</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Sidebar -->
        <div class="col-lg-4">
            <!-- Quick Actions -->
            <div class="card mb-4">
                <div class="card-header">
                    <h6 class="card-title mb-0">Quick Actions</h6>
                </div>
                <div class="card-body">
                    <div class="d-grid gap-2">
                        <button type="button" class="btn btn-outline-primary" onclick="editProject('@Model.Id')">
                            <i class="bi bi-pencil"></i> Edit Project
                        </button>
                        <a href="@Url.Action("Create", "ServiceCatalog")" class="btn btn-outline-success">
                            <i class="bi bi-plus"></i> Add Service
                        </a>
                        <a href="@Url.Action("Create", "Architecture")" class="btn btn-outline-info">
                            <i class="bi bi-diagram-3"></i> Create Diagram
                        </a>
                        <div class="dropdown">
                            <button class="btn btn-outline-secondary dropdown-toggle w-100" type="button" data-bs-toggle="dropdown">
                                <i class="bi bi-three-dots"></i> More Actions
                            </button>
                            <ul class="dropdown-menu w-100">
                                <li><a class="dropdown-item" href="#" onclick="exportProject('@Model.Id')">
                                    <i class="bi bi-download"></i> Export Project
                                </a></li>
                                <li><a class="dropdown-item" href="#" onclick="shareProject('@Model.Id')">
                                    <i class="bi bi-share"></i> Share
                                </a></li>
                                <li><hr class="dropdown-divider"></li>
                                <li><a class="dropdown-item text-danger" href="#" onclick="deleteProject('@Model.Id')">
                                    <i class="bi bi-trash"></i> Delete Project
                                </a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Project Settings -->
            <div class="card mb-4">
                <div class="card-header">
                    <h6 class="card-title mb-0">Settings</h6>
                </div>
                <div class="card-body">
                    <dl class="row small">
                        @if (!string.IsNullOrEmpty(Model.Settings.SlackChannel))
                        {
                            <dt class="col-6">Slack:</dt>
                            <dd class="col-6">@Model.Settings.SlackChannel</dd>
                        }
                        @if (!string.IsNullOrEmpty(Model.Settings.JiraProject))
                        {
                            <dt class="col-6">Jira:</dt>
                            <dd class="col-6">@Model.Settings.JiraProject</dd>
                        }
                        <dt class="col-6">Visibility:</dt>
                        <dd class="col-6">
                            <span class="badge @(Model.Settings.IsPublic ? "bg-success" : "bg-warning")">
                                @(Model.Settings.IsPublic ? "Public" : "Private")
                            </span>
                        </dd>
                        <dt class="col-6">Notifications:</dt>
                        <dd class="col-6">
                            <span class="badge @(Model.Settings.EnableNotifications ? "bg-success" : "bg-secondary")">
                                @(Model.Settings.EnableNotifications ? "Enabled" : "Disabled")
                            </span>
                        </dd>
                    </dl>
                </div>
            </div>

            <!-- Project Metadata -->
            <div class="card">
                <div class="card-header">
                    <h6 class="card-title mb-0">Metadata</h6>
                </div>
                <div class="card-body">
                    <dl class="row small">
                        <dt class="col-6">ID:</dt>
                        <dd class="col-6"><code>@Model.Id</code></dd>
                        <dt class="col-6">Created:</dt>
                        <dd class="col-6">
                            <time datetime="@Model.Metadata.CreatedAt.ToString("yyyy-MM-ddTHH:mm:ssZ")" title="@Model.Metadata.CreatedAt.ToString("F")">
                                @Model.Metadata.CreatedAt.ToString("MMM dd, yyyy")
                            </time>
                        </dd>
                        <dt class="col-6">Updated:</dt>
                        <dd class="col-6">
                            <time datetime="@Model.Metadata.UpdatedAt.ToString("yyyy-MM-ddTHH:mm:ssZ")" title="@Model.Metadata.UpdatedAt.ToString("F")">
                                @Model.Metadata.UpdatedAt.ToString("MMM dd, yyyy")
                            </time>
                        </dd>
                        @if (!string.IsNullOrEmpty(Model.Metadata.CreatedBy))
                        {
                            <dt class="col-6">Created By:</dt>
                            <dd class="col-6">@Model.Metadata.CreatedBy</dd>
                        }
                    </dl>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        // Global functions for project actions
        window.editProject = function(projectId) {
            console.log('Edit project:', projectId);
            // TODO: Implement edit functionality
            alert('Edit functionality coming soon!');
        };

        window.exportProject = function(projectId) {
            console.log('Export project:', projectId);
            // TODO: Implement export functionality
            alert('Export functionality coming soon!');
        };

        window.shareProject = function(projectId) {
            if (navigator.share) {
                navigator.share({
                    title: document.title,
                    url: window.location.href
                }).catch(console.error);
            } else {
                // Fallback: copy URL to clipboard
                navigator.clipboard.writeText(window.location.href).then(() => {
                    alert('Project URL copied to clipboard!');
                }).catch(() => {
                    alert('Failed to copy URL to clipboard');
                });
            }
        };

        window.deleteProject = function(projectId) {
            if (confirm('Are you sure you want to delete this project? This action cannot be undone.')) {
                fetch(`/api/projects/${projectId}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                .then(response => {
                    if (response.ok) {
                        alert('Project deleted successfully!');
                        window.location.href = '/Projects';
                    } else {
                        throw new Error('Failed to delete project');
                    }
                })
                .catch(error => {
                    console.error('Failed to delete project:', error);
                    alert('Failed to delete project: ' + error.message);
                });
            }
        };
    </script>
}

@section Styles {
    <style>
        .avatar-placeholder {
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .badge {
            font-size: 0.75em;
        }
        
        .card-title i {
            color: var(--bs-primary);
        }
        
        time {
            cursor: help;
        }
        
        dl.row dt {
            font-weight: 600;
        }
    </style>
}